import 'package:flutter/material.dart';

import 'package:hive/hive.dart';
import 'package:hive_flutter/hive_flutter.dart';

import 'dart:convert';

import 'package:http/http.dart' as http;



// This file is "main.dart"
import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:flutter/foundation.dart';

// required: associates our `main.dart` with the code generated by Freezed
part 'results.freezed.dart';
// optional: Since our Person class is serializable, we must add this line.
// But if Person was not serializable, we could skip it.
part 'results.g.dart';




@freezed
class Results with _$Results {
  const factory Results({
    @JsonKey(name: "adult") required bool adult,
    @JsonKey(name: "backdrop_path") required String backdrop_path,
    @JsonKey(name: "genre_ids") required List<int> genre_ids,
    @JsonKey(name: "id") required int id,
    @JsonKey(name: "original_language") required String original_language,
    @JsonKey(name: "original_title") required String original_title,
    @JsonKey(name: "overview") required String overview,
    @JsonKey(name: "popularity") required int popularity,
    @JsonKey(name: "poster_path") required String poster_path,
    @JsonKey(name: "release_date") required String release_date,
    @JsonKey(name: "title") required String title,
    @JsonKey(name: "video") required bool video,
    @JsonKey(name: "vote_average") required int vote_average,
    @JsonKey(name: "vote_count") required int vote_count,
  }) = _Results;

  factory Results.fromJson(Map<String, Object?> json)
      => _$ResultsFromJson(json);

}